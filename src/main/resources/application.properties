# Existing properties
spring.application.name=secure-messaging
spring.datasource.url=jdbc:postgresql://localhost:5432/safechat
spring.datasource.username=postgres
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
# JPA/Hibernate properties
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# Server configuration
server.port=8443
server.ssl.enabled=true
server.ssl.key-store=classpath:keystore.p12
server.ssl.key-store-password=${SERVER_SSL_KEYSTORE_PASSWORD}
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=tomcat
# Logging
logging.level.org.springframework.security=DEBUG
logging.level.com.safechat.secure_messaging=DEBUG
# JWT Configuration
app.jwt.secret=${JWT_SECRET}
app.jwt.expiration=86400000
app.jwt.refresh-expiration=604800000
# Security Headers
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=strict
# CORS Configuration
app.cors.allowed-origins=https://localhost:8443,http://localhost:8443,http://localhost:3000
app.cors.allowed-methods=GET,POST,PUT,PATCH,DELETE,OPTIONS
spring.web.resources.static-locations=classpath:/static/
# Add this line to your application.properties file
spring.mvc.pathmatch.matching-strategy=ant-path-matcher


# Ensure static resources are served
spring.mvc.static-path-pattern=/**

# Fallback to index.html for SPA
spring.mvc.view.suffix=.html

# Password Policy
app.security.password.min-length=1
app.security.password.require-special=true
app.security.password.require-digit=true
app.security.password.require-lowercase=true
app.security.password.require-uppercase=true
# Account Lockout
app.security.max-login-attempts=5
app.security.account-lockout-duration=300000
# Audit Logging
app.audit.enabled=true
# Message Encryption
app.encryption.enabled=true
app.encryption.key=${ENCRYPTION_KEY}
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=mranderson8888888@gmail.com
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.debug=true



setup.mode=${SETUP_MODE:false}
setup.admin.username=${SETUP_ADMIN_USERNAME:}
setup.admin.email=${SETUP_ADMIN_EMAIL:}
setup.admin.password=${SETUP_ADMIN_PASSWORD:}

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# Connection Pool Settings
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=12
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
# Server Configuration
spring.mail.properties.mail.smtp.socketFactory.port=465
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory

# Serve index.html for any unknown path (for SPA routing)
spring.web.resources.add-mappings=false